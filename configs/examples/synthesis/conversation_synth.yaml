# Conversation Synthesis Example
# Create multi-turn conversations by chaining generated responses.
# This example generates realistic customer support conversations with different scenarios.
#
# Requirements:
#   - Set your anthropic api key in the environment variable ANTHROPIC_API_KEY
#   - example: `export ANTHROPIC_API_KEY=your_api_key`
#   - Alternatively, change the model in the inference_config section to your desired model
#   - See the inference_config section for more details
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/infer/configuration.html
#
# Usage:
#   oumi synth -c oumi://configs/examples/synthesis/conversation_synth.yaml
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/synth.html
#   - Config class: oumi.core.configs.SynthesisConfig
#   - Params class: oumi.core.configs.params.synthesis_params.GeneralSynthesisParams
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/synthesis_config.py
#   - Params source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/params/synthesis_params.py
#   - Other synthesis configs: configs/**/*synth.yaml

strategy: GENERAL
num_samples: 10
output_path: conversation_dataset.jsonl

strategy_params:
  # Define conversation scenarios and customer types
  sampled_attributes:
    # Generate the system instruction for the agent
    - id: system_instruction
      name: System Instruction
      description: The system instruction to use for the conversation
      possible_values:
        - id: customer_support
          name: Customer Support
          description: |
            You are CareBot, a customer service assistant for BrightTech Electronics.

            Your goals:
            - Specify one of the below actions you are taking at the beginning of your response.
            - Output the action in a structured format so the system can execute it.
            - When writing the parameters, normalize the formatting of the product names and order IDs.
            - Resolve customer issues within your capabilities.
            - Use a polite, empathetic, and professional tone.
            - If you do not have enough information to resolve the issue, ask the customer to clarify.
            - Never suggest you have more information or capabilities than what's provided below.

            ### Tone Rules
            - Be polite, concise, and solution-focused.
            - Acknowledge frustration with empathy.
            - Do not provide personal opinions or unrelated advice.
            - Never ask for personal information like name, phone number, etc.
            - Only ask for email address if the customer requests a refund or account issues.

            ### Action Rules
            Output only one action per response in the following format:
            <ACTION>
            type: [CLARIFY | LOOKUP_ORDER | INITIATE_RETURN | ESCALATE]
            parameters: ...   # JSON-like key/value parameters
            </ACTION>

            After the action block, provide a natural-language response to the customer.
            Do not mix the action block with free text.

            Ensure you have all the information you need to execute the action before outputting a specialized action.

            ### Action Types
            1. CLARIFY
              - parameters: { "reason": string }
              - Example: Need more information to proceed with the request.

            2. LOOKUP_ORDER
              - parameters: { "order_id": string }
              - Example: Order info, shipping status, etc.

            3. INITIATE_RETURN
              - parameters: { "order_id": string, "reason": string }
              - Example: Customer requests to return or exchange a product.

            4. SEARCH_PRODUCT
              - parameters: { "product_name": string }
              - Example: Customer requests information about a product.

            5. ESCALATE
              - parameters: { "account_email": string, "reason": string }
              - Example: Customer requests human support, refund, legal or account issues.

            ### Example Conversations
            Conversation 1
            Customer: "Where's my order BT1234?"
            Agent:
            <ACTION>
            type: LOOKUP_ORDER
            parameters: { "order_id": "BT1234" }
            </ACTION>
            Let me check the order status for order BT1234. One moment please.

            Conversation 2
            Customer:
            "I want to return my headphones."
            Agent:
            <ACTION>
            type: CLARIFY
            parameters: { "reason": "Need order ID to proceed with return request" }
            </ACTION>
            Sure, let me help you with that. What's the order ID for the headphones, and why do you want to return them?
            Customer:
            "I want to return my headphones because they don't fit."
            Agent:
            <ACTION>
            type: CLARIFY
            parameters: { "reason": "Need more information to proceed with return request" }
            </ACTION>
            I'm sorry to hear that. If you can provide me with the order ID, I can setup a return request for you right away.
            Customer:
            "Oh sure, it's 187390231847."
            Agent:
            <ACTION>
            type: INITIATE_RETURN
            parameters: { "order_id": "187390231847", "reason": "Headphones don't fit" }
            </ACTION>
            Thank you! I've initiated a return request for you.

            Conversation 3
            Customer:
            "I can't login to my account."
            Agent:
            <ACTION>
            type: CLARIFY
            parameters: { "reason": "Need email address to proceed with escalation" }
            </ACTION>
            I'm sorry to hear that. Can you please provide me with the email address associated with your account?
            Customer:
            "Oh sure, it's john.doe@example.com."
            Agent:
            <ACTION>
            type: ESCALATE
            parameters: { "account_email": "john.doe@example.com", "reason": "Login issues" }
            </ACTION>
            Thank you! I've escalated this to a specialist. One moment please.

    # Which support scenario the customer is facing
    - id: scenario
      name: Support Scenario
      description: The type of customer support issue being addressed
      possible_values:
        - id: account_issue
          name: Account Problems
          description: Login issues, password resets, account access problems
        - id: order_issue
          name: Order Problems
          description: Order issues, shipping status, etc.
        - id: billing_issue
          name: Billing Questions
          description: Questions about charges, payments, subscription management
        - id: product_issue
          name: Product Information
          description: Feature questions, how-to guides, product comparisons
        - id: technical_issue
          name: Technical Issues
          description: Bug reports, troubleshooting, technical difficulties
        - id: refund_request
          name: Refund Requests
          description: Return requests, cancellations, refund processing

    # The customer's personality
    - id: customer_type
      name: Customer Personality
      description: The customer's communication style and emotional state
      possible_values:
        - id: concise
          name: Concise
          description: Short and to the point, no fluff or unnecessary details
          sample_rate: 0.4
        - id: friendly
          name: Friendly
          description: Polite, patient, and appreciative
          sample_rate: 0.05
        - id: frustrated
          name: Frustrated
          description: Annoyed but still reasonable
          sample_rate: 0.2
        - id: confused
          name: Confused
          description: Uncertain and needs clear explanations
          sample_rate: 0.1
        - id: demanding
          name: Demanding
          description: Urgent, wants immediate resolution
          sample_rate: 0.1
        - id: curious
          name: Curious
          description: Asking lots of questions, wants to understand
          sample_rate: 0.05
        - id: adversarial
          name: Adversarial
          description: Attempting to deceive or manipulate the agent to say or do something it shouldn't do
          sample_rate: 0.1

    # How the customer should interact with the agent
    - id: customer_interaction
      name: Customer Interaction
      description: How the customer should interact with the agent
      possible_values:
        - id: cooperative
          name: Cooperative
          description: Cooperates with the agent to resolve the issue
          sample_rate: 0.6
        - id: escalated
          name: Escalated
          description: Customer needs to be escalated to a specialist or supervisor
          sample_rate: 0.2
        - id: incomplete
          name: Incomplete
          description: Customer gives insufficient information to resolve the issue
          sample_rate: 0.1
        - id: combative
          name: Combative
          description: Customer is combative and refuses to cooperate with the agent
          sample_rate: 0.1

  # Generate the customer's opening message
  generated_attributes:
    - id: customer_opener
      instruction_messages:
        - role: SYSTEM
          content: |
            You are creating realistic customer support conversation starters.

            The customer should sound natural and match their personality type.
        - role: USER
          content: |
            Customer personality: {customer_type.description}
            Issue type: {scenario.description}

            Company name: BrightTech Electronics

            Make it sound natural and realistic.
            Write only the customer's opening message.
            Include enough information to know what the customer is asking for, but not enough to be immediately actionable.

            Format your response as follows:
            Customer:
            Place your customer's opening message here.
            End Customer

            Write only the customer's opening message, do not include additional filler text.
      postprocessing_params:
        id: cleaned_opener
        cut_prefix: "Customer:"
        cut_suffix: "End Customer"
        strip_whitespace: true

    # Generate the support agent's response
    - id: agent_response
      instruction_messages:
        - role: SYSTEM
          content: |
            {system_instruction.description}

            Respond to the customer's opening message.

            Format your response as follows:
            Response:
            <ACTION>
            type: [CLARIFY | LOOKUP_ORDER | INITIATE_RETURN | SEARCH_PRODUCT | ESCALATE]
            parameters: ...   # JSON-like key/value parameters
            </ACTION>
            Place your agent's response here.
            End Response

            Write only the agent's response, do not include additional filler text.
        - role: USER
          content: "{cleaned_opener}"
      postprocessing_params:
        id: cleaned_agent_response
        cut_prefix: "Response:"
        cut_suffix: "End Response"
        strip_whitespace: true

    # Generate the customer's follow-up
    - id: customer_followup
      instruction_messages:
        - role: SYSTEM
          content: |
            You are the customer continuing the conversation with the support agent.

            Customer personality: {customer_type.description}
            Issue type: {scenario.description}

            Maintain the same personality and tone as your opening message.
            When providing an order ID, it is a sequence of 12 digits.
            When providing a product name, it should be a realistic product name.
            React naturally to the agent's response.
            Your respond should maintain a similar personality to your opening message.
            While maintaining personality, your message should be the following type:
            {customer_interaction}: {customer_interaction.description}

            Opening message: "{cleaned_opener}"

            Format your response as follows:
            Customer:
            Place your customer's follow-up message here.
            End Customer

            Write only the customer's follow-up message, do not include additional filler text.
        - role: USER
          content: "{cleaned_agent_response}"
      postprocessing_params:
        id: cleaned_followup
        cut_prefix: "Customer:"
        cut_suffix: "End Customer"
        strip_whitespace: true

    # Generate the final agent response
    - id: final_agent_response
      instruction_messages:
        - role: SYSTEM
          content: |
            {system_instruction.description}

            Format your response as follows:
            Response:
            <ACTION>
            type: [CLARIFY | LOOKUP_ORDER | INITIATE_RETURN | SEARCH_PRODUCT | ESCALATE]
            parameters: ...   # JSON-like key/value parameters
            </ACTION>
            Place your final agent response here.
            End Response

            Write only the final agent response, do not include additional filler text.
        - role: USER
          content: "{cleaned_opener}"
        - role: ASSISTANT
          content: "{cleaned_agent_response}"
        - role: USER
          content: "{cleaned_followup}"
      postprocessing_params:
        id: cleaned_final_response
        cut_prefix: "Response:"
        cut_suffix: "End Response"
        strip_whitespace: true

  # Transform into conversation format
  transformed_attributes:
    - id: conversation
      transformation_strategy:
        type: CHAT
        chat_transform:
          messages:
            - role: SYSTEM
              content: "{system_instruction.description}"
            - role: USER
              content: "{cleaned_opener}"
            - role: ASSISTANT
              content: "{cleaned_agent_response}"
            - role: USER
              content: "{cleaned_followup}"
            - role: ASSISTANT
              content: "{cleaned_final_response}"

  # Include only relevant attributes in output
  passthrough_attributes:
    - conversation
    - scenario
    - customer_type
    - customer_interaction
    - resolution
    - cleaned_opener
    - cleaned_agent_response
    - cleaned_followup
    - cleaned_final_response

# Example inference configuration
inference_config:
  model:
    model_name: claude-3-5-sonnet-20240620
  engine: ANTHROPIC
  generation:
    max_new_tokens: 8192
    temperature: 0.7
    top_p: 0.9
  remote_params:
    num_workers: 50
    politeness_policy: 60
