# ChatQA Stage 2 GCP job config.
#
# Requirements:
#   - Set up SkyPilot GCP: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html#setup
#   - Log into WandB (`wandb login`) or disable `enable_wandb`
#   - Log into HF: `hf auth login`
#   - (optional) Request access to Llama 3.1 if you want to use it: https://huggingface.co/meta-llama/Llama-3.1-8B-Instruct
#
# Usage:
#   oumi launch up -c configs/projects/chatqa/gcp_job.yaml --cluster chatqa-stage2
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html
#   - Config class: oumi.core.configs.JobConfig
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/job_config.py
#   - Other job configs: configs/**/*job.yaml

name: chatqa-stage2-nopack

resources:
  cloud: gcp
  accelerators: "A100-80GB"
  use_spot: false
  disk_size: 1000 # Disk size in GB

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials
  ~/.cache/huggingface/token: ~/.cache/huggingface/token # HF credentials

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: chatqa.stage2

setup: |
  set -e
  pip install uv && uv pip install oumi[gpu]

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  set -x
  oumi distributed torchrun \
      -m oumi train \
      -c configs/projects/chatqa/chatqa_stage2_train.yaml \
      --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
      --training.ddp_find_unused_parameters false \
      --training.dataloader_num_workers 2 \
      --training.dataloader_prefetch_factor 4 \
      --training.include_performance_metrics true \
      --training.enable_wandb true

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
