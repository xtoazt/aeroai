# Job config to LoRA fine-tune Qwen2 VL 2B Instruct on GCP.
#
# Requirements:
#   - Set up SkyPilot GCP: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html#setup
#   - Log into WandB (`wandb login`) or disable `enable_wandb`
#   - Log into HF: `hf auth login`
#
# Usage:
#   oumi launch up --config configs/recipes/vision/qwen2_vl_2b/sft/lora/gcp_job.yaml --cluster qwen2-vl-vision
#
# See Also:
#   - Documentation: https://oumi.ai/docs/en/latest/user_guides/launch/launch.html
#   - Config class: oumi.core.configs.JobConfig
#   - Config source: https://github.com/oumi-ai/oumi/blob/main/src/oumi/core/configs/job_config.py
#   - Other job configs: configs/**/*job.yaml

name: qwen2-vl-sft-lora-train

resources:
  cloud: gcp
  accelerators: "A100:1" # Feel free to use more GPUs.
  use_spot: false
  disk_size: 1000 # Disk size in GBs

num_nodes: 1 # Set it to N for multi-node training.

working_dir: .

file_mounts:
  ~/.netrc: ~/.netrc # WandB credentials
  ~/.cache/huggingface/token: ~/.cache/huggingface/token # HF credentials

envs:
  WANDB_PROJECT: oumi-train
  OUMI_RUN_NAME: qwen2-vl.lora.sft

setup: |
  set -e
  pip install uv && uv pip install oumi[gpu] hf_transfer
  # Install model from HF Hub. This tool increases download speed compared to
  # downloading the model during training.
  HF_HUB_ENABLE_HF_TRANSFER=1 hf download Qwen/Qwen2-VL-2B-Instruct

run: |
  set -e  # Exit if any command failed.
  source ./configs/examples/misc/sky_init.sh

  if test ${OUMI_TOTAL_NUM_GPUS} -gt 1; then
    RUN_COMMAND="oumi distributed torchrun -m oumi train"
  else
    RUN_COMMAND="oumi train"
  fi

  set -x
  ${RUN_COMMAND}\
    -c configs/recipes/vision/qwen2_vl_2b/sft/lora/train.yaml \
    --training.run_name "${OUMI_RUN_NAME}.${SKYPILOT_TASK_ID}" \
    --training.max_steps 20 \
    --training.save_steps 0 \
    --training.save_final_model false

  echo "Node ${SKYPILOT_NODE_RANK} is all done!"
